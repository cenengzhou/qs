--02.1 copy ATTACH_MAIN_CERT
insert into PCMSDATAPROD.ATTACHMENT (
ID,
ID_TABLE,
NAME_TABLE,
NO_SEQUENCE,
TYPE_DOCUMENT,
NAME_FILE,
PATH_FILE,
TEXT,
USERNAME_CREATED,
DATE_CREATED,
USERNAME_LAST_MODIFIED,
DATE_LAST_MODIFIED
)
(select
PCMSDATAPROD.ATTACHMENT_SEQ.nextval as ID,
attach.MAIN_CERT_ID as ID_TABLE,
'MAIN_CERT' as NAME_TABLE,
attach.SEQUENCENO as NO_SEQUENCE,
attach.DOCUMENTTYPE as TYPE_DOCUMENT,
attach.FILENAME as NAME_FILE,
attach.FILELINK as PATH_FILE,
attach.TEXTATTACHMENT as TEXT,
attach.CREATED_USER as USERNAME_CREATED,
attach.CREATED_DATE as DATE_CREATED,
attach.LAST_MODIFIED_USER as USERNAME_LAST_MODIFIED,
attach.LAST_MODIFIED_DATE as DATE_LAST_MODIFIED
from PCMSDATAPROD.ATTACH_MAIN_CERT attach
left join PCMSDATAPROD.MAIN_CERT owner
on attach.MAIN_CERT_ID = owner.id
where attach.SYSTEM_STATUS = 'ACTIVE'
and owner.id is not null
);

-- should be empty result set 
-- or some record at oldTable cannot be found at owner table
select newTable.id AS newId, 'MAIN_CERT' as tableName, oldTable.* from PCMSDATAPROD.ATTACH_MAIN_CERT oldTable
left outer join PCMSDATAPROD.ATTACHMENT newTable
ON newTable.ID_TABLE = oldTable.MAIN_CERT_ID
AND newTable.NO_SEQUENCE = oldTable.SEQUENCENO
WHERE newTable.id IS NULL;

--02.2 copy ATTACH_PAYMENT
insert into PCMSDATAPROD.ATTACHMENT (
ID,
ID_TABLE,
NAME_TABLE,
NO_SEQUENCE,
TYPE_DOCUMENT,
NAME_FILE,
PATH_FILE,
TEXT,
USERNAME_CREATED,
DATE_CREATED,
USERNAME_LAST_MODIFIED,
DATE_LAST_MODIFIED
)
(select
PCMSDATAPROD.ATTACHMENT_SEQ.nextval as ID,
attach.PAYMENT_CERT_ID as ID_TABLE,
'PAYMENT' as NAME_TABLE,
attach.SEQUENCENO as NO_SEQUENCE,
attach.DOCUMENTTYPE as TYPE_DOCUMENT,
attach.FILENAME as NAME_FILE,
attach.FILELINK as PATH_FILE,
attach.TEXTATTACHMENT as TEXT,
attach.CREATED_USER as USERNAME_CREATED,
attach.CREATED_DATE as DATE_CREATED,
attach.LAST_MODIFIED_USER as USERNAME_LAST_MODIFIED,
attach.LAST_MODIFIED_DATE as DATE_LAST_MODIFIED
from PCMSDATAPROD.ATTACH_PAYMENT attach
left join PCMSDATAPROD.PAYMENT_CERT owner
on attach.PAYMENT_CERT_ID = owner.id
where attach.SYSTEM_STATUS = 'ACTIVE'
and owner.id is not null
);

-- should be empty result set 
-- or some record at oldTable cannot be found at owner table
select newTable.id AS newId, 'PAYMENT' as tableName, oldTable.* from PCMSDATAPROD.ATTACH_PAYMENT oldTable
left outer join PCMSDATAPROD.ATTACHMENT newTable
ON newTable.ID_TABLE = oldTable.PAYMENT_CERT_ID
AND newTable.NO_SEQUENCE = oldTable.SEQUENCENO
WHERE newTable.id IS NULL;

--02.3 copy ATTACH_REPACKAGING
insert into PCMSDATAPROD.ATTACHMENT (
ID,
ID_TABLE,
NAME_TABLE,
NO_SEQUENCE,
TYPE_DOCUMENT,
NAME_FILE,
PATH_FILE,
TEXT,
USERNAME_CREATED,
DATE_CREATED,
USERNAME_LAST_MODIFIED,
DATE_LAST_MODIFIED
)
(select
PCMSDATAPROD.ATTACHMENT_SEQ.nextval as ID,
attach.REPACKAGING_ID as ID_TABLE,
'REPACKAGING' as NAME_TABLE,
attach.SEQUENCENO as NO_SEQUENCE,
attach.DOCUMENTTYPE as TYPE_DOCUMENT,
attach.FILENAME as NAME_FILE,
attach.FILELINK as PATH_FILE,
attach.TEXTATTACHMENT as TEXT,
attach.CREATED_USER as USERNAME_CREATED,
attach.CREATED_DATE as DATE_CREATED,
attach.LAST_MODIFIED_USER as USERNAME_LAST_MODIFIED,
attach.LAST_MODIFIED_DATE as DATE_LAST_MODIFIED
from PCMSDATAPROD.ATTACH_REPACKAGING attach
left join PCMSDATAPROD.REPACKAGING owner
on attach.REPACKAGING_ID = owner.id
where attach.SYSTEM_STATUS = 'ACTIVE'
and owner.id is not null
);

-- should be empty result set 
-- or some record at oldTable cannot be found at owner table
select newTable.id AS newId, 'REPACKAGING' as tableName, oldTable.* from PCMSDATAPROD.ATTACH_REPACKAGING oldTable
left outer join PCMSDATAPROD.ATTACHMENT newTable
ON newTable.ID_TABLE = oldTable.REPACKAGING_ID
AND newTable.NO_SEQUENCE = oldTable.SEQUENCENO
WHERE newTable.id IS NULL;

--02.4 copy ATTACH_SUBCONTRACT
insert into PCMSDATAPROD.ATTACHMENT (
ID,
ID_TABLE,
NAME_TABLE,
NO_SEQUENCE,
TYPE_DOCUMENT,
NAME_FILE,
PATH_FILE,
TEXT,
USERNAME_CREATED,
DATE_CREATED,
USERNAME_LAST_MODIFIED,
DATE_LAST_MODIFIED
)
(select
PCMSDATAPROD.ATTACHMENT_SEQ.nextval as ID,
attach.SUBCONTRACT_ID as ID_TABLE,
'SUBCONTRACT' as NAME_TABLE,
attach.SEQUENCENO as NO_SEQUENCE,
attach.DOCUMENTTYPE as TYPE_DOCUMENT,
attach.FILENAME as NAME_FILE,
attach.FILELINK as PATH_FILE,
attach.TEXTATTACHMENT as TEXT,
attach.CREATED_USER as USERNAME_CREATED,
attach.CREATED_DATE as DATE_CREATED,
attach.LAST_MODIFIED_USER as USERNAME_LAST_MODIFIED,
attach.LAST_MODIFIED_DATE as DATE_LAST_MODIFIED
from PCMSDATAPROD.ATTACH_SUBCONTRACT attach
left join PCMSDATAPROD.SUBCONTRACT owner
on attach.SUBCONTRACT_ID = owner.id
where attach.SYSTEM_STATUS = 'ACTIVE'
and owner.id is not null
);

-- should be empty result set 
-- or some record at oldTable cannot be found at owner table
select newTable.id AS newId, 'ATTACH_SUBCONTRACT' as tableName, oldTable.* from PCMSDATAPROD.ATTACH_SUBCONTRACT oldTable
left outer join PCMSDATAPROD.ATTACHMENT newTable
ON newTable.ID_TABLE = oldTable.SUBCONTRACT_ID
AND newTable.NO_SEQUENCE = oldTable.SEQUENCENO
WHERE newTable.id IS NULL;
