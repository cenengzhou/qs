/**
 * 
 */
package com.gammon.qs.service.admin;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import com.gammon.pcms.config.MailConfig;
import com.gammon.pcms.config.QuartzConfig;
import com.gammon.qs.wrapper.EmailMessage;

/**
 * @author koeyyeung
 *
 */
@Component
public class MailContentGenerator {
	@Autowired
	private MailService mailService;
	@Autowired
	private EnvironmentConfig environmentConfig;
	@Autowired
	private QuartzConfig quartzConfig;
	@Autowired
	private MailConfig mailConfig;
	
	public String obtainEmailContentForScheduleJob(Date startTime, Date endTime, String exceptionMaessage){
		String emailHeader = "<html><head><meta content=\"text/html; charset=ISO-8859-1\" http-equiv=\"content-type\">" +
		"<title>Exceptional Report</title>"+
		"<style type=\"text/css\">"+
		"body {"+
		"font-family: Arial;"+
		"font-size: 8pt:8pt"+";"+
		"}"+
		"table.simple {"+
		"border: 0px solid black;"+
		"padding: 5px;"+
		"font-family: arial;"+
		"font-size: 8pt:8pt"+";"+
		"}"+
		"tr.first {"+
		"background-color: #ffffff;"+
		"height: 25px;"+
		"}"+
		"tr.second {"+
		"background-color: #ccffcc;"+
		"height: 25px;"+
		"}"+
		"td.cell02 {"+
		"border-bottom: 1px solid black;"+
		"}"+
		"</style>"+
		"</head>"+
		"<body>";
		
		String mainContent = "Dear All ,<br><br>"
							 +"System: QS System <br>"
							 +"Server: "+environmentConfig.getNodeName()+"<br>";
		if(startTime==null)
			mainContent+="Start Time:<br>";
		else
			mainContent+="Start Time: "+startTime+"<br>";

		if(endTime==null)
			mainContent+="End Time:<br><br>";
		else
			mainContent+="End Time: "+endTime+"<br><br>";

		mainContent+="Exception Message: <br>"+exceptionMaessage;
		
		String emailFooter = "<br><br><hr><br>Please do not reply to this e-mail as it is auto-generated by the system.<br>"+
		"<br>" +"</body>" +"</html>";
		
		String emailContent = emailHeader+mainContent+emailFooter;
		
		return emailContent;
	}
	
	public boolean sendEmail(String subject, String content){
		boolean sent=false;
		
		//TRY SEND EMAIL
		// 1. Prepare email
		EmailMessage emailMessage = new EmailMessage();
		// 1a. Set recipients
		List<String> recipients = new ArrayList<String>();
		recipients.add(quartzConfig.getQuartzSetting("RECEIVER"));
		recipients.add(mailConfig.getMailSmtp("BCC"));
		
		emailMessage.setRecipients(recipients);

		// 1b. Set subject
		emailMessage.setSubject(subject);

		// 1c. Set content
		emailMessage.setContent(content);

		// 1d. Set attachment paths
		List<String> attachmentPaths = null;
		emailMessage.setAttachmentPaths(attachmentPaths);

		// 2. Send email
		sent = mailService.sendEmail(emailMessage);
		
		return sent;
	}

}
