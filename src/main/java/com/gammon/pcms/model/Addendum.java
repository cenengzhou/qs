package com.gammon.pcms.model;
// Generated Jun 14, 2016 11:29:35 AM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.SelectBeforeUpdate;
import org.hibernate.envers.AuditOverride;
import org.hibernate.envers.Audited;

import com.gammon.pcms.application.PcmsPersistedAuditObject;
import com.gammon.qs.domain.Subcontract;

/**
 * Addendum generated by hbm2java
 */
@Audited
@AuditOverride(forClass = PcmsPersistedAuditObject.class)
@Entity
@DynamicUpdate
@SelectBeforeUpdate
@Table(name = "ADDENDUM")
@SequenceGenerator(	name = "ADDENDUM_GEN",
					sequenceName = "ADDENDUM_SEQ",
					allocationSize = 1)
public class Addendum extends PcmsPersistedAuditObject {

	private static final long serialVersionUID = -730074274051941598L;

	public static enum STATUS {
		PENDING,
		SUBMITTED,
		APPROVED
	}
	
	public static enum APPROVAL_STATUS {
		NA,
		APPROVED,
		REJECTED
	}


	private BigDecimal id;
	private Subcontract idSubcontract;
	private String noJob;
	private String noSubcontract;
	private String descriptionSubcontract;
	private String noSubcontractor;
	private String nameSubcontractor;
	private long no;
	private String title;
	private BigDecimal amtSubcontractRemeasured = new BigDecimal(0.00);
	private BigDecimal amtSubcontractRevised = new BigDecimal(0.00);
	private BigDecimal amtAddendumTotal = new BigDecimal(0.00);
	private BigDecimal amtAddendumTotalTba = new BigDecimal(0.00);
	private BigDecimal amtAddendum = new BigDecimal(0.00);
	private BigDecimal amtSubcontractRevisedTba = new BigDecimal(0.00);
	private Date dateSubmission;
	private Date dateApproval;
	private String status;
	private String statusApproval = APPROVAL_STATUS.NA.toString();
	private String usernamePreparedBy;
	private String remarks;
	private BigDecimal noAddendumDetailNext = new BigDecimal(1);

	public Addendum() {}

	public Addendum(BigDecimal id,
					String noJob,
					String noSubcontract,
					String noSubcontractor,
					long no,
					String usernameCreated,
					Date dateCreated) {
		this.id = id;
		this.noJob = noJob;
		this.noSubcontract = noSubcontract;
		this.noSubcontractor = noSubcontractor;
		this.no = no;
		this.usernameCreated = usernameCreated;
		this.dateCreated = dateCreated;
	}

	public Addendum(BigDecimal id,
					Subcontract idSubcontract,
					String noJob,
					String noSubcontract,
					String descriptionSubcontract,
					String noSubcontractor,
					String nameSubcontractor,
					long no,
					String title,
					BigDecimal amtSubcontractRemeasured,
					BigDecimal amtSubcontractRevised,
					BigDecimal amtAddendumTotal,
					BigDecimal amtAddendumTotalTba,
					BigDecimal amtAddendum,
					BigDecimal amtSubcontractRevisedTba,
					Date dateSubmission,
					Date dateApproval,
					String status,
					String statusApproval,
					String usernamePreparedBy,
					String remarks,
					BigDecimal noAddendumDetailNext,
					String usernameCreated,
					Date dateCreated,
					String usernameLastModified,
					Date dateLastModified) {
		this.id = id;
		this.idSubcontract = idSubcontract;
		this.noJob = noJob;
		this.noSubcontract = noSubcontract;
		this.descriptionSubcontract = descriptionSubcontract;
		this.noSubcontractor = noSubcontractor;
		this.nameSubcontractor = nameSubcontractor;
		this.no = no;
		this.title = title;
		this.amtSubcontractRemeasured = amtSubcontractRemeasured;
		this.amtSubcontractRevised = amtSubcontractRevised;
		this.amtAddendumTotal = amtAddendumTotal;
		this.amtAddendumTotalTba = amtAddendumTotalTba;
		this.amtAddendum = amtAddendum;
		this.amtSubcontractRevisedTba = amtSubcontractRevisedTba;
		this.dateSubmission = dateSubmission;
		this.dateApproval = dateApproval;
		this.status = status;
		this.statusApproval = statusApproval;
		this.usernamePreparedBy = usernamePreparedBy;
		this.remarks = remarks;
		this.noAddendumDetailNext = noAddendumDetailNext;
		this.usernameCreated = usernameCreated;
		this.dateCreated = dateCreated;
		this.usernameLastModified = usernameLastModified;
		this.dateLastModified = dateLastModified;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE,
					generator = "ADDENDUM_GEN")
	@Column(name = "ID",
			unique = true,
			nullable = false,
			scale = 0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "ID_SUBCONTRACT",
				nullable = false)
	public Subcontract getIdSubcontract() {
		return this.idSubcontract;
	}

	public void setIdSubcontract(Subcontract idSubcontract) {
		this.idSubcontract = idSubcontract;
	}

	@Column(name = "NO_JOB",
			nullable = false,
			length = 10)
	public String getNoJob() {
		return this.noJob;
	}

	public void setNoJob(String noJob) {
		this.noJob = noJob;
	}

	@Column(name = "NO_SUBCONTRACT",
			nullable = false,
			length = 8)
	public String getNoSubcontract() {
		return this.noSubcontract;
	}

	public void setNoSubcontract(String noSubcontract) {
		this.noSubcontract = noSubcontract;
	}

	@Column(name = "DESCRIPTION_SUBCONTRACT",
			length = 510)
	public String getDescriptionSubcontract() {
		return this.descriptionSubcontract;
	}

	public void setDescriptionSubcontract(String descriptionSubcontract) {
		this.descriptionSubcontract = descriptionSubcontract;
	}

	@Column(name = "NO_SUBCONTRACTOR",
			nullable = false,
			length = 20)
	public String getNoSubcontractor() {
		return this.noSubcontractor;
	}

	public void setNoSubcontractor(String noSubcontractor) {
		this.noSubcontractor = noSubcontractor;
	}

	@Column(name = "NAME_SUBCONTRACTOR",
			length = 510)
	public String getNameSubcontractor() {
		return this.nameSubcontractor;
	}

	public void setNameSubcontractor(String nameSubcontractor) {
		this.nameSubcontractor = nameSubcontractor;
	}

	@Column(name = "NO",
			nullable = false,
			precision = 10,
			scale = 0)
	public long getNo() {
		return this.no;
	}

	public void setNo(long no) {
		this.no = no;
	}

	@Column(name = "TITLE",
			length = 510)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "AMT_SUBCONTRACT_REMEASURED",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtSubcontractRemeasured() {
		return this.amtSubcontractRemeasured;
	}

	public void setAmtSubcontractRemeasured(BigDecimal amtSubcontractRemeasured) {
		this.amtSubcontractRemeasured = amtSubcontractRemeasured;
	}

	@Column(name = "AMT_SUBCONTRACT_REVISED",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtSubcontractRevised() {
		return this.amtSubcontractRevised;
	}

	public void setAmtSubcontractRevised(BigDecimal amtSubcontractRevised) {
		this.amtSubcontractRevised = amtSubcontractRevised;
	}

	@Column(name = "AMT_ADDENDUM_TOTAL",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtAddendumTotal() {
		return this.amtAddendumTotal;
	}

	public void setAmtAddendumTotal(BigDecimal amtAddendumTotal) {
		this.amtAddendumTotal = amtAddendumTotal;
	}

	@Column(name = "AMT_ADDENDUM_TOTAL_TBA",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtAddendumTotalTba() {
		return this.amtAddendumTotalTba;
	}

	public void setAmtAddendumTotalTba(BigDecimal amtAddendumTotalTba) {
		this.amtAddendumTotalTba = amtAddendumTotalTba;
	}

	@Column(name = "AMT_ADDENDUM",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtAddendum() {
		return this.amtAddendum;
	}

	public void setAmtAddendum(BigDecimal amtAddendum) {
		this.amtAddendum = amtAddendum;
	}

	@Column(name = "AMT_SUBCONTRACT_REVISED_TBA",
			precision = 19,
			scale = 2)
	public BigDecimal getAmtSubcontractRevisedTba() {
		return this.amtSubcontractRevisedTba;
	}

	public void setAmtSubcontractRevisedTba(BigDecimal amtSubcontractRevisedTba) {
		this.amtSubcontractRevisedTba = amtSubcontractRevisedTba;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_SUBMISSION",
			length = 7)
	public Date getDateSubmission() {
		return this.dateSubmission;
	}

	public void setDateSubmission(Date dateSubmission) {
		this.dateSubmission = dateSubmission;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_APPROVAL",
			length = 7)
	public Date getDateApproval() {
		return this.dateApproval;
	}

	public void setDateApproval(Date dateApproval) {
		this.dateApproval = dateApproval;
	}

	@Column(name = "STATUS",
			length = 40)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "STATUS_APPROVAL",
			length = 40)
	public String getStatusApproval() {
		return this.statusApproval;
	}

	public void setStatusApproval(String statusApproval) {
		this.statusApproval = statusApproval;
	}

	@Column(name = "USERNAME_PREPARED_BY",
			length = 40)
	public String getUsernamePreparedBy() {
		return this.usernamePreparedBy;
	}

	public void setUsernamePreparedBy(String usernamePreparedBy) {
		this.usernamePreparedBy = usernamePreparedBy;
	}

	@Column(name = "REMARKS",
			length = 2000)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	@Column(name = "NO_ADDENDUM_DETAIL_NEXT",
			precision = 10,
			scale = 0)
	public BigDecimal getNoAddendumDetailNext() {
		return noAddendumDetailNext;
	}

	public void setNoAddendumDetailNext(BigDecimal noAddendumDetailNext) {
		this.noAddendumDetailNext = noAddendumDetailNext;
	}

	@Override
	public String toString() {
		return "Addendum [id=" + id + ", idSubcontract=" + idSubcontract + ", noJob=" + noJob + ", noSubcontract=" + noSubcontract + ", descriptionSubcontract=" + descriptionSubcontract + ", noSubcontractor=" + noSubcontractor + ", nameSubcontractor=" + nameSubcontractor + ", no=" + no + ", title=" + title + ", amtSubcontractRemeasured=" + amtSubcontractRemeasured + ", amtSubcontractRevised=" + amtSubcontractRevised + ", amtAddendumTotal=" + amtAddendumTotal + ", amtAddendumTotalTba=" + amtAddendumTotalTba + ", amtAddendum=" + amtAddendum + ", amtSubcontractRevisedTba=" + amtSubcontractRevisedTba + ", dateSubmission=" + dateSubmission + ", dateApproval=" + dateApproval + ", status=" + status + ", statusApproval=" + statusApproval + ", usernamePreparedBy=" + usernamePreparedBy + ", remarks=" + remarks + ", noAddendumDetailNext=" + noAddendumDetailNext + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((amtAddendum == null) ? 0 : amtAddendum.hashCode());
		result = prime * result + ((amtAddendumTotal == null) ? 0 : amtAddendumTotal.hashCode());
		result = prime * result + ((amtAddendumTotalTba == null) ? 0 : amtAddendumTotalTba.hashCode());
		result = prime * result + ((amtSubcontractRemeasured == null) ? 0 : amtSubcontractRemeasured.hashCode());
		result = prime * result + ((amtSubcontractRevised == null) ? 0 : amtSubcontractRevised.hashCode());
		result = prime * result + ((amtSubcontractRevisedTba == null) ? 0 : amtSubcontractRevisedTba.hashCode());
		result = prime * result + ((dateApproval == null) ? 0 : dateApproval.hashCode());
		result = prime * result + ((dateSubmission == null) ? 0 : dateSubmission.hashCode());
		result = prime * result + ((descriptionSubcontract == null) ? 0 : descriptionSubcontract.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((idSubcontract == null) ? 0 : idSubcontract.hashCode());
		result = prime * result + ((nameSubcontractor == null) ? 0 : nameSubcontractor.hashCode());
		result = prime * result + (int) (no ^ (no >>> 32));
		result = prime * result + ((noJob == null) ? 0 : noJob.hashCode());
		result = prime * result + ((noSubcontract == null) ? 0 : noSubcontract.hashCode());
		result = prime * result + ((noSubcontractor == null) ? 0 : noSubcontractor.hashCode());
		result = prime * result + ((remarks == null) ? 0 : remarks.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		result = prime * result + ((statusApproval == null) ? 0 : statusApproval.hashCode());
		result = prime * result + ((title == null) ? 0 : title.hashCode());
		result = prime * result + ((usernamePreparedBy == null) ? 0 : usernamePreparedBy.hashCode());
		result = prime * result + ((noAddendumDetailNext == null) ? 0 : noAddendumDetailNext.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		Addendum other = (Addendum) obj;
		if (amtAddendum == null) {
			if (other.amtAddendum != null)
				return false;
		} else if (!amtAddendum.equals(other.amtAddendum))
			return false;
		if (amtAddendumTotal == null) {
			if (other.amtAddendumTotal != null)
				return false;
		} else if (!amtAddendumTotal.equals(other.amtAddendumTotal))
			return false;
		if (amtAddendumTotalTba == null) {
			if (other.amtAddendumTotalTba != null)
				return false;
		} else if (!amtAddendumTotalTba.equals(other.amtAddendumTotalTba))
			return false;
		if (amtSubcontractRemeasured == null) {
			if (other.amtSubcontractRemeasured != null)
				return false;
		} else if (!amtSubcontractRemeasured.equals(other.amtSubcontractRemeasured))
			return false;
		if (amtSubcontractRevised == null) {
			if (other.amtSubcontractRevised != null)
				return false;
		} else if (!amtSubcontractRevised.equals(other.amtSubcontractRevised))
			return false;
		if (amtSubcontractRevisedTba == null) {
			if (other.amtSubcontractRevisedTba != null)
				return false;
		} else if (!amtSubcontractRevisedTba.equals(other.amtSubcontractRevisedTba))
			return false;
		if (dateApproval == null) {
			if (other.dateApproval != null)
				return false;
		} else if (!dateApproval.equals(other.dateApproval))
			return false;
		if (dateSubmission == null) {
			if (other.dateSubmission != null)
				return false;
		} else if (!dateSubmission.equals(other.dateSubmission))
			return false;
		if (descriptionSubcontract == null) {
			if (other.descriptionSubcontract != null)
				return false;
		} else if (!descriptionSubcontract.equals(other.descriptionSubcontract))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (idSubcontract == null) {
			if (other.idSubcontract != null)
				return false;
		} else if (!idSubcontract.equals(other.idSubcontract))
			return false;
		if (nameSubcontractor == null) {
			if (other.nameSubcontractor != null)
				return false;
		} else if (!nameSubcontractor.equals(other.nameSubcontractor))
			return false;
		if (no != other.no)
			return false;
		if (noJob == null) {
			if (other.noJob != null)
				return false;
		} else if (!noJob.equals(other.noJob))
			return false;
		if (noSubcontract == null) {
			if (other.noSubcontract != null)
				return false;
		} else if (!noSubcontract.equals(other.noSubcontract))
			return false;
		if (noSubcontractor == null) {
			if (other.noSubcontractor != null)
				return false;
		} else if (!noSubcontractor.equals(other.noSubcontractor))
			return false;
		if (remarks == null) {
			if (other.remarks != null)
				return false;
		} else if (!remarks.equals(other.remarks))
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		} else if (!status.equals(other.status))
			return false;
		if (statusApproval == null) {
			if (other.statusApproval != null)
				return false;
		} else if (!statusApproval.equals(other.statusApproval))
			return false;
		if (title == null) {
			if (other.title != null)
				return false;
		} else if (!title.equals(other.title))
			return false;
		if (usernamePreparedBy == null) {
			if (other.usernamePreparedBy != null)
				return false;
		} else if (!usernamePreparedBy.equals(other.usernamePreparedBy))
			return false;
		if (noAddendumDetailNext == null) {
			if (other.noAddendumDetailNext != null)
				return false;
		} else if (!noAddendumDetailNext.equals(other.noAddendumDetailNext))
			return false;
		return true;
	}


}
