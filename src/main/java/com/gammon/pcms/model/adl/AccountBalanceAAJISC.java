package com.gammon.pcms.model.adl;
// Generated Jun 28, 2016 4:30:40 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

import com.gammon.pcms.model.adl.id.AccountBalanceAAJISCId;

/**
 * AccountBalanceAAJISC generated by hbm2java
 */
@Entity
@IdClass(AccountBalanceAAJISCId.class)
@Table(name = "RPT_IV_ACCT_BALANCE_SL")
public class AccountBalanceAAJISC implements Serializable {

	private static final long serialVersionUID = 501972202491444226L;
	public static final String TYPE_SUBLEDGER_X = "X";
	public static final String CODE_OBJECT_COSTCODE_STARTER = "1";
	public static final String CODE_SUBSIDIARY_EMPTY = "        ";
	

	private AccountMaster accountMaster;
	private BigDecimal fiscalYear;
	private BigDecimal accountPeriod;
	private String accountSubLedger;
	private String accountTypeSubLedger;

	private String entityBusinessUnitKey;
	private String accountObject;
	private String accountSubsidiary;
	private String accountDescription;
	private String currencyLocal;
	private BigDecimal aaAmountPeriod;
	private BigDecimal jiAmountPeriod;
	private BigDecimal aaAmountAccum;
	private BigDecimal jiAmountAccum;

	public AccountBalanceAAJISC() {}

	public AccountBalanceAAJISC(AccountMaster accountMaster,
								BigDecimal fiscalYear,
								BigDecimal accountPeriod,
								String accountSubLedger,
								String accountTypeSubLedger) {
		this.accountMaster = accountMaster;
		this.fiscalYear = fiscalYear;
		this.accountPeriod = accountPeriod;
		this.accountSubLedger = accountSubLedger;
		this.accountTypeSubLedger = accountTypeSubLedger;
	}

	public AccountBalanceAAJISC(AccountMaster accountMaster,
								BigDecimal fiscalYear,
								BigDecimal accountPeriod,
								String accountSubLedger,
								String accountTypeSubLedger,
								String entityBusinessUnitKey,
								String accountObject,
								String accountSubsidiary,
								String accountDescription,
								String currencyLocal,
								BigDecimal aaAmountPeriod,
								BigDecimal jiAmountPeriod,
								BigDecimal aaAmountAccum,
								BigDecimal jiAmountAccum) {
		super();
		this.accountMaster = accountMaster;
		this.fiscalYear = fiscalYear;
		this.accountPeriod = accountPeriod;
		this.accountSubLedger = accountSubLedger;
		this.accountTypeSubLedger = accountTypeSubLedger;
		this.entityBusinessUnitKey = entityBusinessUnitKey;
		this.accountObject = accountObject;
		this.accountSubsidiary = accountSubsidiary;
		this.accountDescription = accountDescription;
		this.currencyLocal = currencyLocal;
		this.aaAmountPeriod = aaAmountPeriod;
		this.jiAmountPeriod = jiAmountPeriod;
		this.aaAmountAccum = aaAmountAccum;
		this.jiAmountAccum = jiAmountAccum;
	}

	@Id
	public AccountMaster getAccountMaster() {
		return this.accountMaster;
	}

	public void setAccountMaster(AccountMaster accountMaster) {
		this.accountMaster = accountMaster;
	}

	@Id
	public BigDecimal getFiscalYear() {
		return this.fiscalYear;
	}

	public void setFiscalYear(BigDecimal fiscalYear) {
		this.fiscalYear = fiscalYear;
	}

	@Id
	public BigDecimal getAccountPeriod() {
		return this.accountPeriod;
	}

	public void setAccountPeriod(BigDecimal accountPeriod) {
		this.accountPeriod = accountPeriod;
	}

	@Id
	public String getAccountSubLedger() {
		return this.accountSubLedger;
	}

	public void setAccountSubLedger(String accountSubLedger) {
		this.accountSubLedger = accountSubLedger;
	}

	@Id
	public String getAccountTypeSubLedger() {
		return this.accountTypeSubLedger;
	}

	public void setAccountTypeSubLedger(String accountTypeSubLedger) {
		this.accountTypeSubLedger = accountTypeSubLedger;
	}

	@Column(name = "ENTITY_BUSINESS_UNIT_KEY",
			length = 48)
	public String getEntityBusinessUnitKey() {
		return this.entityBusinessUnitKey;
	}

	public void setEntityBusinessUnitKey(String entityBusinessUnitKey) {
		this.entityBusinessUnitKey = entityBusinessUnitKey;
	}

	@Column(name = "ACCOUNT_OBJECT",
			length = 24)
	public String getAccountObject() {
		return this.accountObject;
	}

	public void setAccountObject(String accountObject) {
		this.accountObject = accountObject;
	}

	@Column(name = "ACCOUNT_SUBSIDIARY",
			length = 32)
	public String getAccountSubsidiary() {
		return this.accountSubsidiary;
	}

	public void setAccountSubsidiary(String accountSubsidiary) {
		this.accountSubsidiary = accountSubsidiary;
	}

	@Column(name = "ACCOUNT_DESCRIPTION",
			length = 120)
	public String getAccountDescription() {
		return this.accountDescription;
	}

	public void setAccountDescription(String accountDescription) {
		this.accountDescription = accountDescription;
	}

	@Column(name = "CURRENCY_LOCAL",
			length = 12)
	public String getCurrencyLocal() {
		return this.currencyLocal;
	}

	public void setCurrencyLocal(String currencyLocal) {
		this.currencyLocal = currencyLocal;
	}

	@Column(name = "AA_AMOUNT_PERIOD",
			precision = 22,
			scale = 0)
	public BigDecimal getAaAmountPeriod() {
		return this.aaAmountPeriod;
	}

	public void setAaAmountPeriod(BigDecimal aaAmountPeriod) {
		this.aaAmountPeriod = aaAmountPeriod;
	}

	@Column(name = "JI_AMOUNT_PERIOD",
			precision = 22,
			scale = 0)
	public BigDecimal getJiAmountPeriod() {
		return this.jiAmountPeriod;
	}

	public void setJiAmountPeriod(BigDecimal jiAmountPeriod) {
		this.jiAmountPeriod = jiAmountPeriod;
	}

	@Column(name = "AA_AMOUNT_ACCUM",
			precision = 22,
			scale = 0)
	public BigDecimal getAaAmountAccum() {
		return this.aaAmountAccum;
	}

	public void setAaAmountAccum(BigDecimal aaAmountAccum) {
		this.aaAmountAccum = aaAmountAccum;
	}

	@Column(name = "JI_AMOUNT_ACCUM",
			precision = 22,
			scale = 0)
	public BigDecimal getJiAmountAccum() {
		return this.jiAmountAccum;
	}

	public void setJiAmountAccum(BigDecimal jiAmountAccum) {
		this.jiAmountAccum = jiAmountAccum;
	}

	@Override
	public String toString() {
		return "AccountBalanceAAJISC [accountMaster=" + accountMaster + ", fiscalYear=" + fiscalYear + ", accountPeriod=" + accountPeriod + ", accountSubLedger=" + accountSubLedger + ", accountTypeSubLedger=" + accountTypeSubLedger + ", entityBusinessUnitKey=" + entityBusinessUnitKey + ", accountObject=" + accountObject + ", accountSubsidiary=" + accountSubsidiary + ", accountDescription=" + accountDescription + ", currencyLocal=" + currencyLocal + ", aaAmountPeriod=" + aaAmountPeriod + ", jiAmountPeriod=" + jiAmountPeriod + ", aaAmountAccum=" + aaAmountAccum + ", jiAmountAccum=" + jiAmountAccum + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((aaAmountAccum == null) ? 0 : aaAmountAccum.hashCode());
		result = prime * result + ((aaAmountPeriod == null) ? 0 : aaAmountPeriod.hashCode());
		result = prime * result + ((accountDescription == null) ? 0 : accountDescription.hashCode());
		result = prime * result + ((accountMaster == null) ? 0 : accountMaster.hashCode());
		result = prime * result + ((accountObject == null) ? 0 : accountObject.hashCode());
		result = prime * result + ((accountPeriod == null) ? 0 : accountPeriod.hashCode());
		result = prime * result + ((accountSubLedger == null) ? 0 : accountSubLedger.hashCode());
		result = prime * result + ((accountSubsidiary == null) ? 0 : accountSubsidiary.hashCode());
		result = prime * result + ((accountTypeSubLedger == null) ? 0 : accountTypeSubLedger.hashCode());
		result = prime * result + ((currencyLocal == null) ? 0 : currencyLocal.hashCode());
		result = prime * result + ((entityBusinessUnitKey == null) ? 0 : entityBusinessUnitKey.hashCode());
		result = prime * result + ((fiscalYear == null) ? 0 : fiscalYear.hashCode());
		result = prime * result + ((jiAmountAccum == null) ? 0 : jiAmountAccum.hashCode());
		result = prime * result + ((jiAmountPeriod == null) ? 0 : jiAmountPeriod.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AccountBalanceAAJISC other = (AccountBalanceAAJISC) obj;
		if (aaAmountAccum == null) {
			if (other.aaAmountAccum != null)
				return false;
		} else if (!aaAmountAccum.equals(other.aaAmountAccum))
			return false;
		if (aaAmountPeriod == null) {
			if (other.aaAmountPeriod != null)
				return false;
		} else if (!aaAmountPeriod.equals(other.aaAmountPeriod))
			return false;
		if (accountDescription == null) {
			if (other.accountDescription != null)
				return false;
		} else if (!accountDescription.equals(other.accountDescription))
			return false;
		if (accountMaster == null) {
			if (other.accountMaster != null)
				return false;
		} else if (!accountMaster.equals(other.accountMaster))
			return false;
		if (accountObject == null) {
			if (other.accountObject != null)
				return false;
		} else if (!accountObject.equals(other.accountObject))
			return false;
		if (accountPeriod == null) {
			if (other.accountPeriod != null)
				return false;
		} else if (!accountPeriod.equals(other.accountPeriod))
			return false;
		if (accountSubLedger == null) {
			if (other.accountSubLedger != null)
				return false;
		} else if (!accountSubLedger.equals(other.accountSubLedger))
			return false;
		if (accountSubsidiary == null) {
			if (other.accountSubsidiary != null)
				return false;
		} else if (!accountSubsidiary.equals(other.accountSubsidiary))
			return false;
		if (accountTypeSubLedger == null) {
			if (other.accountTypeSubLedger != null)
				return false;
		} else if (!accountTypeSubLedger.equals(other.accountTypeSubLedger))
			return false;
		if (currencyLocal == null) {
			if (other.currencyLocal != null)
				return false;
		} else if (!currencyLocal.equals(other.currencyLocal))
			return false;
		if (entityBusinessUnitKey == null) {
			if (other.entityBusinessUnitKey != null)
				return false;
		} else if (!entityBusinessUnitKey.equals(other.entityBusinessUnitKey))
			return false;
		if (fiscalYear == null) {
			if (other.fiscalYear != null)
				return false;
		} else if (!fiscalYear.equals(other.fiscalYear))
			return false;
		if (jiAmountAccum == null) {
			if (other.jiAmountAccum != null)
				return false;
		} else if (!jiAmountAccum.equals(other.jiAmountAccum))
			return false;
		if (jiAmountPeriod == null) {
			if (other.jiAmountPeriod != null)
				return false;
		} else if (!jiAmountPeriod.equals(other.jiAmountPeriod))
			return false;
		return true;
	}

}
