package com.gammon.pcms.model.adl;
// Generated Jun 21, 2016 2:04:43 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

/**
 * FactAccountBalanceId generated by hbm2java
 */

public class FactAccountBalanceId implements Serializable {

	private static final long serialVersionUID = -6209048153370339914L;
	private DimAccountMaster dimAccountMaster;
	private BigDecimal fiscalYear;
	private String accountTypeLedger;
	private String accountSubLedger;

	public FactAccountBalanceId(){}

	public FactAccountBalanceId(DimAccountMaster dimAccountMaster, BigDecimal fiscalYear, String accountTypeLedger,
			String accountSubLedger) {
		super();
		this.dimAccountMaster = dimAccountMaster;
		this.fiscalYear = fiscalYear;
		this.accountTypeLedger = accountTypeLedger;
		this.accountSubLedger = accountSubLedger;
	}
	
	@ManyToOne
	@JoinColumn(name = "ACCOUNT_CODE_KEY", nullable = false)
	public DimAccountMaster getDimAccountMaster() {
		return this.dimAccountMaster;
	}

	public void setDimAccountMaster(DimAccountMaster dimAccountMaster) {
		this.dimAccountMaster = dimAccountMaster;
	}

	@Column(name = "FISCAL_YEAR", nullable = false, precision = 22, scale = 0)
	public BigDecimal getFiscalYear() {
		return this.fiscalYear;
	}

	public void setFiscalYear(BigDecimal fiscalYear) {
		this.fiscalYear = fiscalYear;
	}

	@Column(name = "ACCOUNT_TYPE_LEDGER", nullable = false, length = 8)
	public String getAccountTypeLedger() {
		return this.accountTypeLedger;
	}

	public void setAccountTypeLedger(String accountTypeLedger) {
		this.accountTypeLedger = accountTypeLedger;
	}

	@Column(name = "ACCOUNT_SUB_LEDGER", nullable = false, length = 32)
	public String getAccountSubLedger() {
		return this.accountSubLedger;
	}

	public void setAccountSubLedger(String accountSubLedger) {
		this.accountSubLedger = accountSubLedger;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "FactAccountBalanceId [accountCodeKey=" + dimAccountMaster + ", fiscalYear=" + fiscalYear
				+ ", accountTypeLedger=" + accountTypeLedger + ", accountSubLedger=" + accountSubLedger + "]";
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((dimAccountMaster == null) ? 0 : dimAccountMaster.hashCode());
		result = prime * result + ((accountSubLedger == null) ? 0 : accountSubLedger.hashCode());
		result = prime * result + ((accountTypeLedger == null) ? 0 : accountTypeLedger.hashCode());
		result = prime * result + ((fiscalYear == null) ? 0 : fiscalYear.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FactAccountBalanceId)) {
			return false;
		}
		FactAccountBalanceId other = (FactAccountBalanceId) obj;
		if (dimAccountMaster == null) {
			if (other.dimAccountMaster != null) {
				return false;
			}
		} else if (!dimAccountMaster.equals(other.dimAccountMaster)) {
			return false;
		}
		if (accountSubLedger == null) {
			if (other.accountSubLedger != null) {
				return false;
			}
		} else if (!accountSubLedger.equals(other.accountSubLedger)) {
			return false;
		}
		if (accountTypeLedger == null) {
			if (other.accountTypeLedger != null) {
				return false;
			}
		} else if (!accountTypeLedger.equals(other.accountTypeLedger)) {
			return false;
		}
		if (fiscalYear == null) {
			if (other.fiscalYear != null) {
				return false;
			}
		} else if (!fiscalYear.equals(other.fiscalYear)) {
			return false;
		}
		return true;
	}

}
