package com.gammon.pcms.model.adl;
// Generated Jun 28, 2016 4:30:40 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.Table;

/**
 * FactAccountLedger generated by hbm2java
 */
@Entity
@IdClass(FactAccountLedgerId.class)
@Table(name = "FACT_ACCOUNT_LEDGER")
public class FactAccountLedger implements java.io.Serializable {

	private static final long serialVersionUID = -5688170504117669153L;
	
	private String entityDocCompanyKey;
	private String typeDocument;
	private BigDecimal numberDocument;
	private BigDecimal numberJournalEntryLine;
	private String numberJeLineExtension;
	private String accountTypeLedger;
	private BigDecimal accountPeriod;
	
	private String typeDocumentDescription;
	private Date dateGl;
	private String statusPost;
	private String statusPostDescription;
	private BigDecimal numberBatch;
	private String typeBatch;
	private String typeBatchDescription;
	private Date dateBatch;
	private Date dateInput;
	private String entityCompanyKey;
	private String accountGl;
	private String accountKey;
	private String entityBusinessUnitKey;
	private String accountObject;
	private String accountSubsidiary;
	private String accountSubLedger;
	private String accountTypeSubLedger;
	private String accountTypeLedgerDescr;
	private BigDecimal accountFiscalYear;
	private String currencyCode;
	private BigDecimal amount;
	private BigDecimal itemKey;
	private BigDecimal quantity;
	private String quantityUnitOfMeasurement;
	private String accountGlClass;
	private String typeReverseOrVoid;
	private String explanationAddressBook;
	private String explanationRemark;
	private String reference1;
	private String reference2;
	private String reference3;
	private String numberPayItem;
	private BigDecimal entityAddressBookKey;
	private String recordKeyVoucher;
	private String recordKeyMatchedPo;
	private String numberPaymentOrCheck;
	private Date datePaymentOrCheck;
	private String typeReconciliation;
	private String numberAssetIdentification;
	private String statusFixedAssetPosted;
	private String numberInvoice;
	private Date dateInvoice;
	private String entityInputBy;
	private BigDecimal recordKeyPaymentId;
	private String entityGlPostedBy;
	private Date datePosted;
	private String taxRateCode;
	private String taxExplCode;
	private String taxExplanationDescription;

	public FactAccountLedger() {
	}

	public FactAccountLedger(String entityDocCompanyKey, String typeDocument, BigDecimal numberDocument,
			BigDecimal numberJournalEntryLine, String numberJeLineExtension, String accountTypeLedger,
			BigDecimal accountPeriod) {
		super();
		this.entityDocCompanyKey = entityDocCompanyKey;
		this.typeDocument = typeDocument;
		this.numberDocument = numberDocument;
		this.numberJournalEntryLine = numberJournalEntryLine;
		this.numberJeLineExtension = numberJeLineExtension;
		this.accountTypeLedger = accountTypeLedger;
		this.accountPeriod = accountPeriod;
	}

	public FactAccountLedger(String entityDocCompanyKey, String typeDocument, BigDecimal numberDocument,
			BigDecimal numberJournalEntryLine, String numberJeLineExtension, String accountTypeLedger,
			BigDecimal accountPeriod, String typeDocumentDescription, Date dateGl, String statusPost,
			String statusPostDescription, BigDecimal numberBatch, String typeBatch, String typeBatchDescription,
			Date dateBatch, Date dateInput, String entityCompanyKey, String accountGl, String accountKey,
			String entityBusinessUnitKey, String accountObject, String accountSubsidiary, String accountSubLedger,
			String accountTypeSubLedger, String accountTypeLedgerDescr, BigDecimal accountFiscalYear,
			String currencyCode, BigDecimal amount, BigDecimal itemKey, BigDecimal quantity,
			String quantityUnitOfMeasurement, String accountGlClass, String typeReverseOrVoid,
			String explanationAddressBook, String explanationRemark, String reference1, String reference2,
			String reference3, String numberPayItem, BigDecimal entityAddressBookKey, String recordKeyVoucher,
			String recordKeyMatchedPo, String numberPaymentOrCheck, Date datePaymentOrCheck, String typeReconciliation,
			String numberAssetIdentification, String statusFixedAssetPosted, String numberInvoice, Date dateInvoice,
			String entityInputBy, BigDecimal recordKeyPaymentId, String entityGlPostedBy, Date datePosted,
			String taxRateCode, String taxExplCode, String taxExplanationDescription) {
		super();
		this.entityDocCompanyKey = entityDocCompanyKey;
		this.typeDocument = typeDocument;
		this.numberDocument = numberDocument;
		this.numberJournalEntryLine = numberJournalEntryLine;
		this.numberJeLineExtension = numberJeLineExtension;
		this.accountTypeLedger = accountTypeLedger;
		this.accountPeriod = accountPeriod;
		this.typeDocumentDescription = typeDocumentDescription;
		this.dateGl = dateGl;
		this.statusPost = statusPost;
		this.statusPostDescription = statusPostDescription;
		this.numberBatch = numberBatch;
		this.typeBatch = typeBatch;
		this.typeBatchDescription = typeBatchDescription;
		this.dateBatch = dateBatch;
		this.dateInput = dateInput;
		this.entityCompanyKey = entityCompanyKey;
		this.accountGl = accountGl;
		this.accountKey = accountKey;
		this.entityBusinessUnitKey = entityBusinessUnitKey;
		this.accountObject = accountObject;
		this.accountSubsidiary = accountSubsidiary;
		this.accountSubLedger = accountSubLedger;
		this.accountTypeSubLedger = accountTypeSubLedger;
		this.accountTypeLedgerDescr = accountTypeLedgerDescr;
		this.accountFiscalYear = accountFiscalYear;
		this.currencyCode = currencyCode;
		this.amount = amount;
		this.itemKey = itemKey;
		this.quantity = quantity;
		this.quantityUnitOfMeasurement = quantityUnitOfMeasurement;
		this.accountGlClass = accountGlClass;
		this.typeReverseOrVoid = typeReverseOrVoid;
		this.explanationAddressBook = explanationAddressBook;
		this.explanationRemark = explanationRemark;
		this.reference1 = reference1;
		this.reference2 = reference2;
		this.reference3 = reference3;
		this.numberPayItem = numberPayItem;
		this.entityAddressBookKey = entityAddressBookKey;
		this.recordKeyVoucher = recordKeyVoucher;
		this.recordKeyMatchedPo = recordKeyMatchedPo;
		this.numberPaymentOrCheck = numberPaymentOrCheck;
		this.datePaymentOrCheck = datePaymentOrCheck;
		this.typeReconciliation = typeReconciliation;
		this.numberAssetIdentification = numberAssetIdentification;
		this.statusFixedAssetPosted = statusFixedAssetPosted;
		this.numberInvoice = numberInvoice;
		this.dateInvoice = dateInvoice;
		this.entityInputBy = entityInputBy;
		this.recordKeyPaymentId = recordKeyPaymentId;
		this.entityGlPostedBy = entityGlPostedBy;
		this.datePosted = datePosted;
		this.taxRateCode = taxRateCode;
		this.taxExplCode = taxExplCode;
		this.taxExplanationDescription = taxExplanationDescription;
	}

	@Id
	public String getEntityDocCompanyKey() {
		return this.entityDocCompanyKey;
	}

	public void setEntityDocCompanyKey(String entityDocCompanyKey) {
		this.entityDocCompanyKey = entityDocCompanyKey;
	}

	@Id
	public String getTypeDocument() {
		return this.typeDocument;
	}

	public void setTypeDocument(String typeDocument) {
		this.typeDocument = typeDocument;
	}

	@Id
	public BigDecimal getNumberDocument() {
		return this.numberDocument;
	}

	public void setNumberDocument(BigDecimal numberDocument) {
		this.numberDocument = numberDocument;
	}
	
	@Id
	public BigDecimal getNumberJournalEntryLine() {
		return this.numberJournalEntryLine;
	}

	public void setNumberJournalEntryLine(BigDecimal numberJournalEntryLine) {
		this.numberJournalEntryLine = numberJournalEntryLine;
	}
	
	@Id
	public String getNumberJeLineExtension() {
		return this.numberJeLineExtension;
	}

	public void setNumberJeLineExtension(String numberJeLineExtension) {
		this.numberJeLineExtension = numberJeLineExtension;
	}
	
	@Id
	public String getAccountTypeLedger() {
		return this.accountTypeLedger;
	}

	public void setAccountTypeLedger(String accountTypeLedger) {
		this.accountTypeLedger = accountTypeLedger;
	}

	@Id
	public BigDecimal getAccountPeriod() {
		return this.accountPeriod;
	}

	public void setAccountPeriod(BigDecimal accountPeriod) {
		this.accountPeriod = accountPeriod;
	}

	@Column(name = "TYPE_DOCUMENT_DESCRIPTION", length = 120)
	public String getTypeDocumentDescription() {
		return this.typeDocumentDescription;
	}

	public void setTypeDocumentDescription(String typeDocumentDescription) {
		this.typeDocumentDescription = typeDocumentDescription;
	}

	@Column(name = "DATE_GL", length = 7)
	public Date getDateGl() {
		return this.dateGl;
	}

	public void setDateGl(Date dateGl) {
		this.dateGl = dateGl;
	}

	@Column(name = "STATUS_POST", length = 4)
	public String getStatusPost() {
		return this.statusPost;
	}

	public void setStatusPost(String statusPost) {
		this.statusPost = statusPost;
	}

	@Column(name = "STATUS_POST_DESCRIPTION", length = 9)
	public String getStatusPostDescription() {
		return this.statusPostDescription;
	}

	public void setStatusPostDescription(String statusPostDescription) {
		this.statusPostDescription = statusPostDescription;
	}

	@Column(name = "NUMBER_BATCH", precision = 22, scale = 0)
	public BigDecimal getNumberBatch() {
		return this.numberBatch;
	}

	public void setNumberBatch(BigDecimal numberBatch) {
		this.numberBatch = numberBatch;
	}

	@Column(name = "TYPE_BATCH", length = 8)
	public String getTypeBatch() {
		return this.typeBatch;
	}

	public void setTypeBatch(String typeBatch) {
		this.typeBatch = typeBatch;
	}

	@Column(name = "TYPE_BATCH_DESCRIPTION", length = 244)
	public String getTypeBatchDescription() {
		return this.typeBatchDescription;
	}

	public void setTypeBatchDescription(String typeBatchDescription) {
		this.typeBatchDescription = typeBatchDescription;
	}

	@Column(name = "DATE_BATCH", length = 7)
	public Date getDateBatch() {
		return this.dateBatch;
	}

	public void setDateBatch(Date dateBatch) {
		this.dateBatch = dateBatch;
	}

	@Column(name = "DATE_INPUT", length = 7)
	public Date getDateInput() {
		return this.dateInput;
	}

	public void setDateInput(Date dateInput) {
		this.dateInput = dateInput;
	}

	@Column(name = "ENTITY_COMPANY_KEY", length = 20)
	public String getEntityCompanyKey() {
		return this.entityCompanyKey;
	}

	public void setEntityCompanyKey(String entityCompanyKey) {
		this.entityCompanyKey = entityCompanyKey;
	}

	@Column(name = "ACCOUNT_GL", length = 116)
	public String getAccountGl() {
		return this.accountGl;
	}

	public void setAccountGl(String accountGl) {
		this.accountGl = accountGl;
	}

	@Column(name = "ACCOUNT_KEY", length = 32)
	public String getAccountKey() {
		return this.accountKey;
	}

	public void setAccountKey(String accountKey) {
		this.accountKey = accountKey;
	}

	@Column(name = "ENTITY_BUSINESS_UNIT_KEY", length = 48)
	public String getEntityBusinessUnitKey() {
		return this.entityBusinessUnitKey;
	}

	public void setEntityBusinessUnitKey(String entityBusinessUnitKey) {
		this.entityBusinessUnitKey = entityBusinessUnitKey;
	}

	@Column(name = "ACCOUNT_OBJECT", length = 24)
	public String getAccountObject() {
		return this.accountObject;
	}

	public void setAccountObject(String accountObject) {
		this.accountObject = accountObject;
	}

	@Column(name = "ACCOUNT_SUBSIDIARY", length = 32)
	public String getAccountSubsidiary() {
		return this.accountSubsidiary;
	}

	public void setAccountSubsidiary(String accountSubsidiary) {
		this.accountSubsidiary = accountSubsidiary;
	}

	@Column(name = "ACCOUNT_SUB_LEDGER", length = 32)
	public String getAccountSubLedger() {
		return this.accountSubLedger;
	}

	public void setAccountSubLedger(String accountSubLedger) {
		this.accountSubLedger = accountSubLedger;
	}

	@Column(name = "ACCOUNT_TYPE_SUB_LEDGER", length = 4)
	public String getAccountTypeSubLedger() {
		return this.accountTypeSubLedger;
	}

	public void setAccountTypeSubLedger(String accountTypeSubLedger) {
		this.accountTypeSubLedger = accountTypeSubLedger;
	}

	@Column(name = "ACCOUNT_TYPE_LEDGER_DESCR", length = 120)
	public String getAccountTypeLedgerDescr() {
		return this.accountTypeLedgerDescr;
	}

	public void setAccountTypeLedgerDescr(String accountTypeLedgerDescr) {
		this.accountTypeLedgerDescr = accountTypeLedgerDescr;
	}

	@Column(name = "ACCOUNT_FISCAL_YEAR", precision = 22, scale = 0)
	public BigDecimal getAccountFiscalYear() {
		return this.accountFiscalYear;
	}

	public void setAccountFiscalYear(BigDecimal accountFiscalYear) {
		this.accountFiscalYear = accountFiscalYear;
	}

	@Column(name = "CURRENCY_CODE", length = 12)
	public String getCurrencyCode() {
		return this.currencyCode;
	}

	public void setCurrencyCode(String currencyCode) {
		this.currencyCode = currencyCode;
	}

	@Column(name = "AMOUNT", precision = 22, scale = 0)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "ITEM_KEY", precision = 22, scale = 0)
	public BigDecimal getItemKey() {
		return this.itemKey;
	}

	public void setItemKey(BigDecimal itemKey) {
		this.itemKey = itemKey;
	}

	@Column(name = "QUANTITY", precision = 22, scale = 0)
	public BigDecimal getQuantity() {
		return this.quantity;
	}

	public void setQuantity(BigDecimal quantity) {
		this.quantity = quantity;
	}

	@Column(name = "QUANTITY_UNIT_OF_MEASUREMENT", length = 8)
	public String getQuantityUnitOfMeasurement() {
		return this.quantityUnitOfMeasurement;
	}

	public void setQuantityUnitOfMeasurement(String quantityUnitOfMeasurement) {
		this.quantityUnitOfMeasurement = quantityUnitOfMeasurement;
	}

	@Column(name = "ACCOUNT_GL_CLASS", length = 16)
	public String getAccountGlClass() {
		return this.accountGlClass;
	}

	public void setAccountGlClass(String accountGlClass) {
		this.accountGlClass = accountGlClass;
	}

	@Column(name = "TYPE_REVERSE_OR_VOID", length = 7)
	public String getTypeReverseOrVoid() {
		return this.typeReverseOrVoid;
	}

	public void setTypeReverseOrVoid(String typeReverseOrVoid) {
		this.typeReverseOrVoid = typeReverseOrVoid;
	}

	@Column(name = "EXPLANATION_ADDRESS_BOOK", length = 120)
	public String getExplanationAddressBook() {
		return this.explanationAddressBook;
	}

	public void setExplanationAddressBook(String explanationAddressBook) {
		this.explanationAddressBook = explanationAddressBook;
	}

	@Column(name = "EXPLANATION_REMARK", length = 120)
	public String getExplanationRemark() {
		return this.explanationRemark;
	}

	public void setExplanationRemark(String explanationRemark) {
		this.explanationRemark = explanationRemark;
	}

	@Column(name = "REFERENCE_1", length = 32)
	public String getReference1() {
		return this.reference1;
	}

	public void setReference1(String reference1) {
		this.reference1 = reference1;
	}

	@Column(name = "REFERENCE_2", length = 32)
	public String getReference2() {
		return this.reference2;
	}

	public void setReference2(String reference2) {
		this.reference2 = reference2;
	}

	@Column(name = "REFERENCE_3", length = 32)
	public String getReference3() {
		return this.reference3;
	}

	public void setReference3(String reference3) {
		this.reference3 = reference3;
	}

	@Column(name = "NUMBER_PAY_ITEM", length = 12)
	public String getNumberPayItem() {
		return this.numberPayItem;
	}

	public void setNumberPayItem(String numberPayItem) {
		this.numberPayItem = numberPayItem;
	}

	@Column(name = "ENTITY_ADDRESS_BOOK_KEY", precision = 22, scale = 0)
	public BigDecimal getEntityAddressBookKey() {
		return this.entityAddressBookKey;
	}

	public void setEntityAddressBookKey(BigDecimal entityAddressBookKey) {
		this.entityAddressBookKey = entityAddressBookKey;
	}

	@Column(name = "RECORD_KEY_VOUCHER", length = 84)
	public String getRecordKeyVoucher() {
		return this.recordKeyVoucher;
	}

	public void setRecordKeyVoucher(String recordKeyVoucher) {
		this.recordKeyVoucher = recordKeyVoucher;
	}

	@Column(name = "RECORD_KEY_MATCHED_PO", length = 112)
	public String getRecordKeyMatchedPo() {
		return this.recordKeyMatchedPo;
	}

	public void setRecordKeyMatchedPo(String recordKeyMatchedPo) {
		this.recordKeyMatchedPo = recordKeyMatchedPo;
	}

	@Column(name = "NUMBER_PAYMENT_OR_CHECK", length = 32)
	public String getNumberPaymentOrCheck() {
		return this.numberPaymentOrCheck;
	}

	public void setNumberPaymentOrCheck(String numberPaymentOrCheck) {
		this.numberPaymentOrCheck = numberPaymentOrCheck;
	}

	@Column(name = "DATE_PAYMENT_OR_CHECK", length = 7)
	public Date getDatePaymentOrCheck() {
		return this.datePaymentOrCheck;
	}

	public void setDatePaymentOrCheck(Date datePaymentOrCheck) {
		this.datePaymentOrCheck = datePaymentOrCheck;
	}

	@Column(name = "TYPE_RECONCILIATION", length = 120)
	public String getTypeReconciliation() {
		return this.typeReconciliation;
	}

	public void setTypeReconciliation(String typeReconciliation) {
		this.typeReconciliation = typeReconciliation;
	}

	@Column(name = "NUMBER_ASSET_IDENTIFICATION", length = 100)
	public String getNumberAssetIdentification() {
		return this.numberAssetIdentification;
	}

	public void setNumberAssetIdentification(String numberAssetIdentification) {
		this.numberAssetIdentification = numberAssetIdentification;
	}

	@Column(name = "STATUS_FIXED_ASSET_POSTED", length = 4)
	public String getStatusFixedAssetPosted() {
		return this.statusFixedAssetPosted;
	}

	public void setStatusFixedAssetPosted(String statusFixedAssetPosted) {
		this.statusFixedAssetPosted = statusFixedAssetPosted;
	}

	@Column(name = "NUMBER_INVOICE", length = 100)
	public String getNumberInvoice() {
		return this.numberInvoice;
	}

	public void setNumberInvoice(String numberInvoice) {
		this.numberInvoice = numberInvoice;
	}

	@Column(name = "DATE_INVOICE", length = 7)
	public Date getDateInvoice() {
		return this.dateInvoice;
	}

	public void setDateInvoice(Date dateInvoice) {
		this.dateInvoice = dateInvoice;
	}

	@Column(name = "ENTITY_INPUT_BY", length = 40)
	public String getEntityInputBy() {
		return this.entityInputBy;
	}

	public void setEntityInputBy(String entityInputBy) {
		this.entityInputBy = entityInputBy;
	}

	@Column(name = "RECORD_KEY_PAYMENT_ID", precision = 22, scale = 0)
	public BigDecimal getRecordKeyPaymentId() {
		return this.recordKeyPaymentId;
	}

	public void setRecordKeyPaymentId(BigDecimal recordKeyPaymentId) {
		this.recordKeyPaymentId = recordKeyPaymentId;
	}

	@Column(name = "ENTITY_GL_POSTED_BY", length = 40)
	public String getEntityGlPostedBy() {
		return this.entityGlPostedBy;
	}

	public void setEntityGlPostedBy(String entityGlPostedBy) {
		this.entityGlPostedBy = entityGlPostedBy;
	}

	@Column(name = "DATE_POSTED", length = 7)
	public Date getDatePosted() {
		return this.datePosted;
	}

	public void setDatePosted(Date datePosted) {
		this.datePosted = datePosted;
	}

	@Column(name = "TAX_RATE_CODE", length = 40)
	public String getTaxRateCode() {
		return this.taxRateCode;
	}

	public void setTaxRateCode(String taxRateCode) {
		this.taxRateCode = taxRateCode;
	}

	@Column(name = "TAX_EXPL_CODE", length = 8)
	public String getTaxExplCode() {
		return this.taxExplCode;
	}

	public void setTaxExplCode(String taxExplCode) {
		this.taxExplCode = taxExplCode;
	}

	@Column(name = "TAX_EXPLANATION_DESCRIPTION", length = 120)
	public String getTaxExplanationDescription() {
		return this.taxExplanationDescription;
	}

	public void setTaxExplanationDescription(String taxExplanationDescription) {
		this.taxExplanationDescription = taxExplanationDescription;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((accountFiscalYear == null) ? 0 : accountFiscalYear.hashCode());
		result = prime * result + ((accountGl == null) ? 0 : accountGl.hashCode());
		result = prime * result + ((accountGlClass == null) ? 0 : accountGlClass.hashCode());
		result = prime * result + ((accountKey == null) ? 0 : accountKey.hashCode());
		result = prime * result + ((accountObject == null) ? 0 : accountObject.hashCode());
		result = prime * result + ((accountPeriod == null) ? 0 : accountPeriod.hashCode());
		result = prime * result + ((accountSubLedger == null) ? 0 : accountSubLedger.hashCode());
		result = prime * result + ((accountSubsidiary == null) ? 0 : accountSubsidiary.hashCode());
		result = prime * result + ((accountTypeLedger == null) ? 0 : accountTypeLedger.hashCode());
		result = prime * result + ((accountTypeLedgerDescr == null) ? 0 : accountTypeLedgerDescr.hashCode());
		result = prime * result + ((accountTypeSubLedger == null) ? 0 : accountTypeSubLedger.hashCode());
		result = prime * result + ((amount == null) ? 0 : amount.hashCode());
		result = prime * result + ((currencyCode == null) ? 0 : currencyCode.hashCode());
		result = prime * result + ((dateBatch == null) ? 0 : dateBatch.hashCode());
		result = prime * result + ((dateGl == null) ? 0 : dateGl.hashCode());
		result = prime * result + ((dateInput == null) ? 0 : dateInput.hashCode());
		result = prime * result + ((dateInvoice == null) ? 0 : dateInvoice.hashCode());
		result = prime * result + ((datePaymentOrCheck == null) ? 0 : datePaymentOrCheck.hashCode());
		result = prime * result + ((datePosted == null) ? 0 : datePosted.hashCode());
		result = prime * result + ((entityAddressBookKey == null) ? 0 : entityAddressBookKey.hashCode());
		result = prime * result + ((entityBusinessUnitKey == null) ? 0 : entityBusinessUnitKey.hashCode());
		result = prime * result + ((entityCompanyKey == null) ? 0 : entityCompanyKey.hashCode());
		result = prime * result + ((entityDocCompanyKey == null) ? 0 : entityDocCompanyKey.hashCode());
		result = prime * result + ((entityGlPostedBy == null) ? 0 : entityGlPostedBy.hashCode());
		result = prime * result + ((entityInputBy == null) ? 0 : entityInputBy.hashCode());
		result = prime * result + ((explanationAddressBook == null) ? 0 : explanationAddressBook.hashCode());
		result = prime * result + ((explanationRemark == null) ? 0 : explanationRemark.hashCode());
		result = prime * result + ((itemKey == null) ? 0 : itemKey.hashCode());
		result = prime * result + ((numberAssetIdentification == null) ? 0 : numberAssetIdentification.hashCode());
		result = prime * result + ((numberBatch == null) ? 0 : numberBatch.hashCode());
		result = prime * result + ((numberDocument == null) ? 0 : numberDocument.hashCode());
		result = prime * result + ((numberInvoice == null) ? 0 : numberInvoice.hashCode());
		result = prime * result + ((numberJeLineExtension == null) ? 0 : numberJeLineExtension.hashCode());
		result = prime * result + ((numberJournalEntryLine == null) ? 0 : numberJournalEntryLine.hashCode());
		result = prime * result + ((numberPayItem == null) ? 0 : numberPayItem.hashCode());
		result = prime * result + ((numberPaymentOrCheck == null) ? 0 : numberPaymentOrCheck.hashCode());
		result = prime * result + ((quantity == null) ? 0 : quantity.hashCode());
		result = prime * result + ((quantityUnitOfMeasurement == null) ? 0 : quantityUnitOfMeasurement.hashCode());
		result = prime * result + ((recordKeyMatchedPo == null) ? 0 : recordKeyMatchedPo.hashCode());
		result = prime * result + ((recordKeyPaymentId == null) ? 0 : recordKeyPaymentId.hashCode());
		result = prime * result + ((recordKeyVoucher == null) ? 0 : recordKeyVoucher.hashCode());
		result = prime * result + ((reference1 == null) ? 0 : reference1.hashCode());
		result = prime * result + ((reference2 == null) ? 0 : reference2.hashCode());
		result = prime * result + ((reference3 == null) ? 0 : reference3.hashCode());
		result = prime * result + ((statusFixedAssetPosted == null) ? 0 : statusFixedAssetPosted.hashCode());
		result = prime * result + ((statusPost == null) ? 0 : statusPost.hashCode());
		result = prime * result + ((statusPostDescription == null) ? 0 : statusPostDescription.hashCode());
		result = prime * result + ((taxExplCode == null) ? 0 : taxExplCode.hashCode());
		result = prime * result + ((taxExplanationDescription == null) ? 0 : taxExplanationDescription.hashCode());
		result = prime * result + ((taxRateCode == null) ? 0 : taxRateCode.hashCode());
		result = prime * result + ((typeBatch == null) ? 0 : typeBatch.hashCode());
		result = prime * result + ((typeBatchDescription == null) ? 0 : typeBatchDescription.hashCode());
		result = prime * result + ((typeDocument == null) ? 0 : typeDocument.hashCode());
		result = prime * result + ((typeDocumentDescription == null) ? 0 : typeDocumentDescription.hashCode());
		result = prime * result + ((typeReconciliation == null) ? 0 : typeReconciliation.hashCode());
		result = prime * result + ((typeReverseOrVoid == null) ? 0 : typeReverseOrVoid.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof FactAccountLedger)) {
			return false;
		}
		FactAccountLedger other = (FactAccountLedger) obj;
		if (accountFiscalYear == null) {
			if (other.accountFiscalYear != null) {
				return false;
			}
		} else if (!accountFiscalYear.equals(other.accountFiscalYear)) {
			return false;
		}
		if (accountGl == null) {
			if (other.accountGl != null) {
				return false;
			}
		} else if (!accountGl.equals(other.accountGl)) {
			return false;
		}
		if (accountGlClass == null) {
			if (other.accountGlClass != null) {
				return false;
			}
		} else if (!accountGlClass.equals(other.accountGlClass)) {
			return false;
		}
		if (accountKey == null) {
			if (other.accountKey != null) {
				return false;
			}
		} else if (!accountKey.equals(other.accountKey)) {
			return false;
		}
		if (accountObject == null) {
			if (other.accountObject != null) {
				return false;
			}
		} else if (!accountObject.equals(other.accountObject)) {
			return false;
		}
		if (accountPeriod == null) {
			if (other.accountPeriod != null) {
				return false;
			}
		} else if (!accountPeriod.equals(other.accountPeriod)) {
			return false;
		}
		if (accountSubLedger == null) {
			if (other.accountSubLedger != null) {
				return false;
			}
		} else if (!accountSubLedger.equals(other.accountSubLedger)) {
			return false;
		}
		if (accountSubsidiary == null) {
			if (other.accountSubsidiary != null) {
				return false;
			}
		} else if (!accountSubsidiary.equals(other.accountSubsidiary)) {
			return false;
		}
		if (accountTypeLedger == null) {
			if (other.accountTypeLedger != null) {
				return false;
			}
		} else if (!accountTypeLedger.equals(other.accountTypeLedger)) {
			return false;
		}
		if (accountTypeLedgerDescr == null) {
			if (other.accountTypeLedgerDescr != null) {
				return false;
			}
		} else if (!accountTypeLedgerDescr.equals(other.accountTypeLedgerDescr)) {
			return false;
		}
		if (accountTypeSubLedger == null) {
			if (other.accountTypeSubLedger != null) {
				return false;
			}
		} else if (!accountTypeSubLedger.equals(other.accountTypeSubLedger)) {
			return false;
		}
		if (amount == null) {
			if (other.amount != null) {
				return false;
			}
		} else if (!amount.equals(other.amount)) {
			return false;
		}
		if (currencyCode == null) {
			if (other.currencyCode != null) {
				return false;
			}
		} else if (!currencyCode.equals(other.currencyCode)) {
			return false;
		}
		if (dateBatch == null) {
			if (other.dateBatch != null) {
				return false;
			}
		} else if (!dateBatch.equals(other.dateBatch)) {
			return false;
		}
		if (dateGl == null) {
			if (other.dateGl != null) {
				return false;
			}
		} else if (!dateGl.equals(other.dateGl)) {
			return false;
		}
		if (dateInput == null) {
			if (other.dateInput != null) {
				return false;
			}
		} else if (!dateInput.equals(other.dateInput)) {
			return false;
		}
		if (dateInvoice == null) {
			if (other.dateInvoice != null) {
				return false;
			}
		} else if (!dateInvoice.equals(other.dateInvoice)) {
			return false;
		}
		if (datePaymentOrCheck == null) {
			if (other.datePaymentOrCheck != null) {
				return false;
			}
		} else if (!datePaymentOrCheck.equals(other.datePaymentOrCheck)) {
			return false;
		}
		if (datePosted == null) {
			if (other.datePosted != null) {
				return false;
			}
		} else if (!datePosted.equals(other.datePosted)) {
			return false;
		}
		if (entityAddressBookKey == null) {
			if (other.entityAddressBookKey != null) {
				return false;
			}
		} else if (!entityAddressBookKey.equals(other.entityAddressBookKey)) {
			return false;
		}
		if (entityBusinessUnitKey == null) {
			if (other.entityBusinessUnitKey != null) {
				return false;
			}
		} else if (!entityBusinessUnitKey.equals(other.entityBusinessUnitKey)) {
			return false;
		}
		if (entityCompanyKey == null) {
			if (other.entityCompanyKey != null) {
				return false;
			}
		} else if (!entityCompanyKey.equals(other.entityCompanyKey)) {
			return false;
		}
		if (entityDocCompanyKey == null) {
			if (other.entityDocCompanyKey != null) {
				return false;
			}
		} else if (!entityDocCompanyKey.equals(other.entityDocCompanyKey)) {
			return false;
		}
		if (entityGlPostedBy == null) {
			if (other.entityGlPostedBy != null) {
				return false;
			}
		} else if (!entityGlPostedBy.equals(other.entityGlPostedBy)) {
			return false;
		}
		if (entityInputBy == null) {
			if (other.entityInputBy != null) {
				return false;
			}
		} else if (!entityInputBy.equals(other.entityInputBy)) {
			return false;
		}
		if (explanationAddressBook == null) {
			if (other.explanationAddressBook != null) {
				return false;
			}
		} else if (!explanationAddressBook.equals(other.explanationAddressBook)) {
			return false;
		}
		if (explanationRemark == null) {
			if (other.explanationRemark != null) {
				return false;
			}
		} else if (!explanationRemark.equals(other.explanationRemark)) {
			return false;
		}
		if (itemKey == null) {
			if (other.itemKey != null) {
				return false;
			}
		} else if (!itemKey.equals(other.itemKey)) {
			return false;
		}
		if (numberAssetIdentification == null) {
			if (other.numberAssetIdentification != null) {
				return false;
			}
		} else if (!numberAssetIdentification.equals(other.numberAssetIdentification)) {
			return false;
		}
		if (numberBatch == null) {
			if (other.numberBatch != null) {
				return false;
			}
		} else if (!numberBatch.equals(other.numberBatch)) {
			return false;
		}
		if (numberDocument == null) {
			if (other.numberDocument != null) {
				return false;
			}
		} else if (!numberDocument.equals(other.numberDocument)) {
			return false;
		}
		if (numberInvoice == null) {
			if (other.numberInvoice != null) {
				return false;
			}
		} else if (!numberInvoice.equals(other.numberInvoice)) {
			return false;
		}
		if (numberJeLineExtension == null) {
			if (other.numberJeLineExtension != null) {
				return false;
			}
		} else if (!numberJeLineExtension.equals(other.numberJeLineExtension)) {
			return false;
		}
		if (numberJournalEntryLine == null) {
			if (other.numberJournalEntryLine != null) {
				return false;
			}
		} else if (!numberJournalEntryLine.equals(other.numberJournalEntryLine)) {
			return false;
		}
		if (numberPayItem == null) {
			if (other.numberPayItem != null) {
				return false;
			}
		} else if (!numberPayItem.equals(other.numberPayItem)) {
			return false;
		}
		if (numberPaymentOrCheck == null) {
			if (other.numberPaymentOrCheck != null) {
				return false;
			}
		} else if (!numberPaymentOrCheck.equals(other.numberPaymentOrCheck)) {
			return false;
		}
		if (quantity == null) {
			if (other.quantity != null) {
				return false;
			}
		} else if (!quantity.equals(other.quantity)) {
			return false;
		}
		if (quantityUnitOfMeasurement == null) {
			if (other.quantityUnitOfMeasurement != null) {
				return false;
			}
		} else if (!quantityUnitOfMeasurement.equals(other.quantityUnitOfMeasurement)) {
			return false;
		}
		if (recordKeyMatchedPo == null) {
			if (other.recordKeyMatchedPo != null) {
				return false;
			}
		} else if (!recordKeyMatchedPo.equals(other.recordKeyMatchedPo)) {
			return false;
		}
		if (recordKeyPaymentId == null) {
			if (other.recordKeyPaymentId != null) {
				return false;
			}
		} else if (!recordKeyPaymentId.equals(other.recordKeyPaymentId)) {
			return false;
		}
		if (recordKeyVoucher == null) {
			if (other.recordKeyVoucher != null) {
				return false;
			}
		} else if (!recordKeyVoucher.equals(other.recordKeyVoucher)) {
			return false;
		}
		if (reference1 == null) {
			if (other.reference1 != null) {
				return false;
			}
		} else if (!reference1.equals(other.reference1)) {
			return false;
		}
		if (reference2 == null) {
			if (other.reference2 != null) {
				return false;
			}
		} else if (!reference2.equals(other.reference2)) {
			return false;
		}
		if (reference3 == null) {
			if (other.reference3 != null) {
				return false;
			}
		} else if (!reference3.equals(other.reference3)) {
			return false;
		}
		if (statusFixedAssetPosted == null) {
			if (other.statusFixedAssetPosted != null) {
				return false;
			}
		} else if (!statusFixedAssetPosted.equals(other.statusFixedAssetPosted)) {
			return false;
		}
		if (statusPost == null) {
			if (other.statusPost != null) {
				return false;
			}
		} else if (!statusPost.equals(other.statusPost)) {
			return false;
		}
		if (statusPostDescription == null) {
			if (other.statusPostDescription != null) {
				return false;
			}
		} else if (!statusPostDescription.equals(other.statusPostDescription)) {
			return false;
		}
		if (taxExplCode == null) {
			if (other.taxExplCode != null) {
				return false;
			}
		} else if (!taxExplCode.equals(other.taxExplCode)) {
			return false;
		}
		if (taxExplanationDescription == null) {
			if (other.taxExplanationDescription != null) {
				return false;
			}
		} else if (!taxExplanationDescription.equals(other.taxExplanationDescription)) {
			return false;
		}
		if (taxRateCode == null) {
			if (other.taxRateCode != null) {
				return false;
			}
		} else if (!taxRateCode.equals(other.taxRateCode)) {
			return false;
		}
		if (typeBatch == null) {
			if (other.typeBatch != null) {
				return false;
			}
		} else if (!typeBatch.equals(other.typeBatch)) {
			return false;
		}
		if (typeBatchDescription == null) {
			if (other.typeBatchDescription != null) {
				return false;
			}
		} else if (!typeBatchDescription.equals(other.typeBatchDescription)) {
			return false;
		}
		if (typeDocument == null) {
			if (other.typeDocument != null) {
				return false;
			}
		} else if (!typeDocument.equals(other.typeDocument)) {
			return false;
		}
		if (typeDocumentDescription == null) {
			if (other.typeDocumentDescription != null) {
				return false;
			}
		} else if (!typeDocumentDescription.equals(other.typeDocumentDescription)) {
			return false;
		}
		if (typeReconciliation == null) {
			if (other.typeReconciliation != null) {
				return false;
			}
		} else if (!typeReconciliation.equals(other.typeReconciliation)) {
			return false;
		}
		if (typeReverseOrVoid == null) {
			if (other.typeReverseOrVoid != null) {
				return false;
			}
		} else if (!typeReverseOrVoid.equals(other.typeReverseOrVoid)) {
			return false;
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "FactAccountLedger [entityDocCompanyKey=" + entityDocCompanyKey + ", typeDocument=" + typeDocument
				+ ", typeDocumentDescription=" + typeDocumentDescription + ", numberDocument=" + numberDocument
				+ ", dateGl=" + dateGl + ", numberJournalEntryLine=" + numberJournalEntryLine
				+ ", numberJeLineExtension=" + numberJeLineExtension + ", statusPost=" + statusPost
				+ ", statusPostDescription=" + statusPostDescription + ", numberBatch=" + numberBatch + ", typeBatch="
				+ typeBatch + ", typeBatchDescription=" + typeBatchDescription + ", dateBatch=" + dateBatch
				+ ", dateInput=" + dateInput + ", entityCompanyKey=" + entityCompanyKey + ", accountGl=" + accountGl
				+ ", accountKey=" + accountKey + ", entityBusinessUnitKey=" + entityBusinessUnitKey + ", accountObject="
				+ accountObject + ", accountSubsidiary=" + accountSubsidiary + ", accountSubLedger=" + accountSubLedger
				+ ", accountTypeSubLedger=" + accountTypeSubLedger + ", accountTypeLedger=" + accountTypeLedger
				+ ", accountTypeLedgerDescr=" + accountTypeLedgerDescr + ", accountPeriod=" + accountPeriod
				+ ", accountFiscalYear=" + accountFiscalYear + ", currencyCode=" + currencyCode + ", amount=" + amount
				+ ", itemKey=" + itemKey + ", quantity=" + quantity + ", quantityUnitOfMeasurement="
				+ quantityUnitOfMeasurement + ", accountGlClass=" + accountGlClass + ", typeReverseOrVoid="
				+ typeReverseOrVoid + ", explanationAddressBook=" + explanationAddressBook + ", explanationRemark="
				+ explanationRemark + ", reference1=" + reference1 + ", reference2=" + reference2 + ", reference3="
				+ reference3 + ", numberPayItem=" + numberPayItem + ", entityAddressBookKey=" + entityAddressBookKey
				+ ", recordKeyVoucher=" + recordKeyVoucher + ", recordKeyMatchedPo=" + recordKeyMatchedPo
				+ ", numberPaymentOrCheck=" + numberPaymentOrCheck + ", datePaymentOrCheck=" + datePaymentOrCheck
				+ ", typeReconciliation=" + typeReconciliation + ", numberAssetIdentification="
				+ numberAssetIdentification + ", statusFixedAssetPosted=" + statusFixedAssetPosted + ", numberInvoice="
				+ numberInvoice + ", dateInvoice=" + dateInvoice + ", entityInputBy=" + entityInputBy
				+ ", recordKeyPaymentId=" + recordKeyPaymentId + ", entityGlPostedBy=" + entityGlPostedBy
				+ ", datePosted=" + datePosted + ", taxRateCode=" + taxRateCode + ", taxExplCode=" + taxExplCode
				+ ", taxExplanationDescription=" + taxExplanationDescription + "]";
	}

}
