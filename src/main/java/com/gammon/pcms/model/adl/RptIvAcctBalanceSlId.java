package com.gammon.pcms.model.adl;
// Generated Jun 28, 2016 4:30:40 PM by Hibernate Tools 4.3.1.Final

import java.io.Serializable;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

/**
 * RptIvAcctBalanceSlId generated by hbm2java
 */
@Embeddable
public class RptIvAcctBalanceSlId implements Serializable {

	private static final long serialVersionUID = -5265769196164670611L;

	private DimAccountMaster dimAccountMaster;
	private BigDecimal fiscalYear;
	private String accountPeriod;
	private String accountSubLedger;
	private String accountTypeSubLedger;

	public RptIvAcctBalanceSlId() {
	}

	public RptIvAcctBalanceSlId(DimAccountMaster dimAccountMaster, BigDecimal fiscalYear, String accountPeriod,
			String accountSubLedger, String accountTypeSubLedger) {
		this.dimAccountMaster = dimAccountMaster;
		this.fiscalYear = fiscalYear;
		this.accountPeriod = accountPeriod;
		this.accountSubLedger = accountSubLedger;
		this.accountTypeSubLedger = accountTypeSubLedger;
	}

	@ManyToOne
	@JoinColumn(name = "ACCOUNT_CODE_KEY")
	public DimAccountMaster getDimAccountMaster() {
		return this.dimAccountMaster;
	}

	public void setDimAccountMaster(DimAccountMaster dimAccountMaster) {
		this.dimAccountMaster = dimAccountMaster;
	}

	@Column(name = "FISCAL_YEAR", precision = 22, scale = 0)
	public BigDecimal getFiscalYear() {
		return this.fiscalYear;
	}

	public void setFiscalYear(BigDecimal fiscalYear) {
		this.fiscalYear = fiscalYear;
	}

	@Column(name = "ACCOUNT_PERIOD", length = 2)
	public String getAccountPeriod() {
		return this.accountPeriod;
	}

	public void setAccountPeriod(String accountPeriod) {
		this.accountPeriod = accountPeriod;
	}

	@Column(name = "ACCOUNT_SUB_LEDGER", length = 32)
	public String getAccountSubLedger() {
		return this.accountSubLedger;
	}

	public void setAccountSubLedger(String accountSubLedger) {
		this.accountSubLedger = accountSubLedger;
	}

	@Column(name = "ACCOUNT_TYPE_SUB_LEDGER", length = 4)
	public String getAccountTypeSubLedger() {
		return this.accountTypeSubLedger;
	}

	public void setAccountTypeSubLedger(String accountTypeSubLedger) {
		this.accountTypeSubLedger = accountTypeSubLedger;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((accountPeriod == null) ? 0 : accountPeriod.hashCode());
		result = prime * result + ((accountSubLedger == null) ? 0 : accountSubLedger.hashCode());
		result = prime * result + ((accountTypeSubLedger == null) ? 0 : accountTypeSubLedger.hashCode());
		result = prime * result + ((dimAccountMaster == null) ? 0 : dimAccountMaster.hashCode());
		result = prime * result + ((fiscalYear == null) ? 0 : fiscalYear.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof RptIvAcctBalanceSlId)) {
			return false;
		}
		RptIvAcctBalanceSlId other = (RptIvAcctBalanceSlId) obj;
		if (accountPeriod == null) {
			if (other.accountPeriod != null) {
				return false;
			}
		} else if (!accountPeriod.equals(other.accountPeriod)) {
			return false;
		}
		if (accountSubLedger == null) {
			if (other.accountSubLedger != null) {
				return false;
			}
		} else if (!accountSubLedger.equals(other.accountSubLedger)) {
			return false;
		}
		if (accountTypeSubLedger == null) {
			if (other.accountTypeSubLedger != null) {
				return false;
			}
		} else if (!accountTypeSubLedger.equals(other.accountTypeSubLedger)) {
			return false;
		}
		if (dimAccountMaster == null) {
			if (other.dimAccountMaster != null) {
				return false;
			}
		} else if (!dimAccountMaster.equals(other.dimAccountMaster)) {
			return false;
		}
		if (fiscalYear == null) {
			if (other.fiscalYear != null) {
				return false;
			}
		} else if (!fiscalYear.equals(other.fiscalYear)) {
			return false;
		}
		return true;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return "RptIvAcctBalanceSlId [dimAccountMaster=" + dimAccountMaster + ", fiscalYear=" + fiscalYear
				+ ", accountPeriod=" + accountPeriod + ", accountSubLedger=" + accountSubLedger
				+ ", accountTypeSubLedger=" + accountTypeSubLedger + "]";
	}

}
